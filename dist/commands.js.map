{"version":3,"file":"commands.js","mappings":"AAKAA,OAAOC,QAAQ,WACX,GA6CJD,OAAOE,QAAQC,UAAU,SAvCzB,SAAgBC,GACZ,IAAIC,EACJC,QAAQC,IAAI,mEACZ,IAAIC,EAAU,CACVC,KAAMT,OAAOU,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAEuB,QAAtCT,EAAKL,OAAOe,QAAQC,QAAQC,YAAyB,IAAPZ,GAAyBA,EAAGa,qBAAqBC,aAAa,gCAAiCX,GAC9IJ,EAAMgB,WACV,GA6BApB,OAAOE,QAAQC,UAAU,cAxBzB,SAAqBC,GACjBE,QAAQC,IAAI,mBACZ,IACI,IAAIU,EAAOjB,OAAOe,QAAQC,QAAQC,KAElC,GADAX,QAAQC,IAAI,OAAQU,GAChBA,GAAQA,EAAKI,QAAS,CACtB,IAAIA,EAAUJ,EAAKI,QACnBrB,OAAOe,QAAQO,GAAGC,mBAAmB,6DAA6DC,OAAOC,mBAAmBJ,IAAW,CAAEK,OAAQ,GAAIC,MAAO,IAAM,SAAUC,GACpKA,EAAOC,SAAW7B,OAAO8B,kBAAkBC,QAC3CzB,QAAQ0B,MAAM,0BAA2BJ,EAAOI,MAAMxB,QAE9D,EACJ,MAEIF,QAAQ2B,KAAK,+BAEjB7B,EAAMgB,WACV,CACA,MAAOc,GACH5B,QAAQ0B,MAAM,0BAA2BE,EAC7C,CACJ","sources":["webpack://office-addin-taskpane-react/./src/commands/commands.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n/* global Office */\nOffice.onReady(function () {\n    // Office.js is ready to be called.\n});\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event) {\n    var _a;\n    console.log(\"Action to show notification when the add-in command is executed\");\n    var message = {\n        type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n        message: \"Performed action.\",\n        icon: \"Icon.80x80\",\n        persistent: true,\n    };\n    (_a = Office.context.mailbox.item) === null || _a === void 0 ? void 0 : _a.notificationMessages.replaceAsync(\"ActionPerformanceNotification\", message);\n    event.completed();\n}\n/**\n * Opens a dialog showing the subject of the selected email.\n * @param event\n */\nfunction readSubject(event) {\n    console.log(\"Read subject...\");\n    try {\n        var item = Office.context.mailbox.item;\n        console.log(\"item\", item);\n        if (item && item.subject) {\n            var subject = item.subject;\n            Office.context.ui.displayDialogAsync(\"https://webit01.github.io/vdspek/dist/dialog.html?subject=\".concat(encodeURIComponent(subject)), { height: 30, width: 40 }, function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    console.error(\"Dialoog openen mislukt:\", result.error.message);\n                }\n            });\n        }\n        else {\n            console.warn(\"Geen onderwerp beschikbaar.\");\n        }\n        event.completed();\n    }\n    catch (e) {\n        console.error(\"Error when read subject\", e);\n    }\n}\n// Register the functions with Office\nOffice.actions.associate(\"action\", action);\nOffice.actions.associate(\"readSubject\", readSubject);\n"],"names":["Office","onReady","actions","associate","event","_a","console","log","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","subject","ui","displayDialogAsync","concat","encodeURIComponent","height","width","result","status","AsyncResultStatus","Failed","error","warn","e"],"sourceRoot":""}